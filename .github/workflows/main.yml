name: mtajjiou-group/vlc-unity
on:
  push:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
jobs:
  libvlc-android-armv8:
    runs-on: ubuntu-latest
    container:
      image: registry.videolan.org/vlc-debian-android:20230614051113
      options: --user root # Only if necessary and safe to do so
    timeout-minutes: 60
    env:
      VLC_UWP_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-ucrt:20230523085945
      VLC_WIN_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-msvcrt:20221214101739
      VLC_DEBIAN_IMAGE: registry.videolan.org/vlc-debian-unstable:20210803114245
      VLC_ANDROID_IMAGE: registry.videolan.org/vlc-debian-android:20230614051113
      ANDROID_ABI: arm64-v8a
    steps:
    - name: Install Git LFS
      run: |
        apt-get update && apt-get install -y git-lfs
        git lfs install
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 20
        lfs: true
    - run: |
        git clone https://code.videolan.org/videolan/vlc-android && cd vlc-android
        git clone https://code.videolan.org/videolan/libvlcjni && cd libvlcjni
        git clone https://code.videolan.org/videolan/vlc --depth=1
        git apply ../../patches/no-libvlcjni-build.patch
        cd ..
        ANDROID_HOME=/sdk/android-sdk-linux ./buildsystem/compile.sh -l -b -r -a ${ANDROID_ABI}
    - uses: actions/upload-artifact@v4.1.0
      if: success()
      with:
        name: "${{ github.job }}"
        retention-days: 14
        path: |-
          vlc-android/libvlcjni/libvlc/jni
          vlc-android/libvlcjni/vlc/include
          vlc-android/libvlcjni/libvlc/build/intermediates/aar_main_jar/release/classes.jar
  libvlcsharp-all:
    runs-on: ubuntu-latest
    container:
      image: registry.videolan.org/vlc-debian-unstable:20210803114245
      options: --user root # Only if necessary and safe to do so
    timeout-minutes: 60
    env:
      VLC_UWP_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-ucrt:20230523085945
      VLC_WIN_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-msvcrt:20221214101739
      VLC_DEBIAN_IMAGE: registry.videolan.org/vlc-debian-unstable:20210803114245
      VLC_ANDROID_IMAGE: registry.videolan.org/vlc-debian-android:20230614051113
      ARGS: "/p:UNITY=true"
    steps:
      - name: Install Git LFS
        run: |
          apt-get update && apt-get install -y git-lfs
          git lfs install

      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 20
          lfs: true

      - name: Clone and Build LibVLCSharp
        run: |
          # Download and extract .NET SDK
          wget https://download.visualstudio.microsoft.com/download/pr/17b6759f-1af0-41bc-ab12-209ba0377779/e8d02195dbf1434b940e0f05ae086453/dotnet-sdk-6.0.100-linux-x64.tar.gz
          mkdir -p $HOME/dotnet && tar zxf dotnet-sdk-6.0.100-linux-x64.tar.gz -C $HOME/dotnet
      
          # Set up .NET environment variables
          export DOTNET_ROOT=$HOME/dotnet
          export PATH=$PATH:$HOME/dotnet
      
          # Clone the LibVLCSharp repository
          mkdir tmp && cd tmp
          git clone https://code.videolan.org/videolan/LibVLCSharp.git lvs
          cd lvs
      
          # Check out the master branch or any specific branch/tag you need
          git checkout master
      
          # Build the project
          dotnet build src/LibVLCSharp/LibVLCSharp.csproj ${ARGS} -c Release
      
          # Prepare the artifacts
          mkdir -p ../../nightlies
          cp -r src/LibVLCSharp/bin/Release/netstandard2.0 ../../nightlies
      
          # Navigate back to the initial directory (important for actions that follow)
          cd ../..

      - name: List build artifacts
        run: ls -R tmp/lvs/nightlies
      - uses: actions/upload-artifact@v4.1.0
        if: success()
        with:
          name: "${{ github.job }}"
          retention-days: 14
          path: nightlies/**
          # path: tmp/lvs/nightlies/*
  unity-android-armv8:
    needs:
    - libvlc-android-armv8
    - libvlcsharp-all
    runs-on: ubuntu-latest
    container:
      image: registry.videolan.org/vlc-debian-android:20230614051113
      options: --user root # Only if necessary and safe to do so
    timeout-minutes: 60
    env:
      VLC_UWP_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-ucrt:20230523085945
      VLC_WIN_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-msvcrt:20221214101739
      VLC_DEBIAN_IMAGE: registry.videolan.org/vlc-debian-unstable:20210803114245
      VLC_ANDROID_IMAGE: registry.videolan.org/vlc-debian-android:20230614051113
      ANDROID_ABI: arm64-v8a
    steps:
    - name: Install Git LFS
      run: |
        apt-get update && apt-get install -y git-lfs
        git lfs install
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v4.1.0
      with:
        name: libvlc-android-armv8
    - run: export PATH="$HOME/sandbox/bin:$PATH"
    - run: PKG_CONFIG_PATH=./vlc-android/libvlcjni/libvlc/jni/pkgconfig/${ANDROID_ABI} meson setup --cross-file=cross/android-${ANDROID_ABI}-ndk25.txt build_android_${ANDROID_ABI} ${ARGS_TRIAL} --buildtype release
    - run: ninja -C build_android_${ANDROID_ABI}
    - uses: actions/upload-artifact@v4.1.0
      if: success()
      with:
        name: "${{ github.job }}"
        retention-days: 14
        path: |-
          vlc-android/libvlcjni/libvlc/jni/libs/${ANDROID_ABI}/libvlc.so
          vlc-android/libvlcjni/libvlc/jni/libs/${ANDROID_ABI}/libc++_shared.so
          vlc-android/libvlcjni/libvlc/build/intermediates/aar_main_jar/release/classes.jar
          build_android_${ANDROID_ABI}/PluginSource/libVLCUnityPlugin.so
  
